{"version":3,"sources":["webpack:///src/views/colligateApplication/comparisonAnalysisRates.vue","webpack:///./src/views/colligateApplication/comparisonAnalysisRates.vue?6888","webpack:///./src/views/colligateApplication/comparisonAnalysisRates.vue"],"names":["pickerOptions","shortcuts","text","onClick","picker","end","Date","start","setTime","getTime","$emit","dataTypeList","name","type","comparisonAnalysisRates","_name$watch$data$meth","watch","data","loadingOne","loadingTwo","loadingThree","loadingFour","dataType","dataValue","custom","tableData","rankingHistogram","uploadRateYear","uploadRateRatio","uploadfiestdiscrib","stationId","openPage","timeType","methods","defineProperty_default","dataTypeToggle","index","item","this","date","datearr","num","getFullYear","getMonth","getDate","push","formatStrToDate","Object","dateformat","dateString","sdate","split","initTime","setRankingCls","rank","cls","parseInt","searchData","rateRankLoading","rateRankNoDataState","uploadRateLoading","uploadRateNoDataState","rateYearLoading","rateYearNoDataState","ringRatioLoading","ringRatioNoDataState","waterQualityGradeChart","searchRanking","uploadRateYearChart","uploadRateRingRatio","_this","startTime","endTime","params","queryCode","queryType","$http","get","then","response","dataJson","code","list","content","dataList","arr","i","length","ranking","uploadRate","rate","info","message","catch","error","_this2","$echarts","init","document","getElementById","option","title","textStyle","fontSize","x","y","tooltip","trigger","axisPointer","grid","top","left","right","bottom","containLabel","xAxis","axisTick","show","axisLine","lineStyle","color","axisLabel","splitLine","yAxis","splitNumber","max","series","barWidth","label","position","formatter","itemStyle","param","dataIndex","setOption","_this3","compareType","legend","icon","yAxisIndex","symbolSize","_this4","mounted","created","stationInfo","value","nodeId","nodeType","$store","state","strictlyinfo","colligateApplication_comparisonAnalysisRates","render","_vm","_h","$createElement","_c","_self","staticClass","_v","_l","key","class","active","attrs","size","plain","on","click","$event","_s","staticStyle","width","align","unlink-panels","range-separator","start-placeholder","end-placeholder","clearable","format","prefix-icon","disabled","picker-options","model","callback","$$v","expression","directives","rawName","element-loading-text","element-loading-spinner","element-loading-background","id","border","height","prop","scopedSlots","_u","fn","scope","row","staticRenderFns","Component","__webpack_require__","normalizeComponent","ssrContext","__webpack_exports__"],"mappings":"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","file":"static/js/45.3cce4fcb04470d606655.js","sourcesContent":["<template>\r\n    <!-- 两率对比分析 -->\r\n    <div class=\"comparison-analysis-rates-page\">\r\n      <!-- <div class=\"analysis-object-tree-warp\">\r\n        <water-radio-tree></water-radio-tree>\r\n      </div> -->\r\n      <div class=\"secondary-page-content\">\r\n        <el-scrollbar class=\"page-content-scroll\">\r\n          <div class=\"secondary-scroll-content clear\">\r\n            <!-- 工具栏部分 -->\r\n            <div class=\"secondary-toolbar\">\r\n              <span>时间段：</span>\r\n              <el-button-group>\r\n                <el-button\r\n                  :class=\"{active:dataType === index}\"\r\n                  size=\"small\" type=\"primary\" plain\r\n                  :key = \"index\"\r\n                  v-for=\"(item,index) in dataTypeList\"\r\n                  @click=\"dataTypeToggle(index,item)\"\r\n                >{{ item.name }}</el-button>\r\n              </el-button-group>\r\n              <div class=\"layoutBox\" style=\"width:242px\">\r\n                <el-date-picker\r\n                  v-model = \"dataValue\"\r\n                  type = \"daterange\"\r\n                  align = \"left\"\r\n                  unlink-panels\r\n                  range-separator = \"~\"\r\n                  start-placeholder = \"开始日期\"\r\n                  end-placeholder = \"结束日期\"\r\n                  :clearable = 'false'\r\n                  format = 'yyyy-MM-dd'\r\n                  prefix-icon = 'el-icon-date'\r\n                  :disabled = \"custom\"\r\n                  :picker-options=\"pickerOptions\">\r\n                </el-date-picker>\r\n              </div>&emsp;\r\n              <el-button @click=\"searchData\"><i class=\"iconfont icon-sousuo\"></i>查询</el-button>\r\n            </div>\r\n            <!-- 数据上传率模块 -->\r\n            <div class=\"currency-mode-wrap\">\r\n              <h4 class=\"currency-mode-title\">\r\n                <i class=\"mode-title-icon\"></i> 数据上传率\r\n                <span class=\"mode-title-line\"></span>\r\n              </h4>\r\n              <div class=\"secondary-mode-content clear\">\r\n                <div class=\"data-upload-rate-chart\" v-loading=\"loadingOne\"  element-loading-text=\"加载中\"\r\n                    element-loading-spinner=\"loading-type-a\"\r\n                    element-loading-background=\"rgba(255, 255, 255, 1)\">\r\n                  \r\n                  <div id=\"upload-rate-ranking\"></div>\r\n                </div>\r\n                <div class=\"data-upload-rate-table\">\r\n                  <h4 class=\"contrast-title\">上传率排名列表</h4>\r\n                  <div class=\"upload-rate-table-wrap\">\r\n                    <el-table\r\n                      :data=\"tableData\"\r\n                      border\r\n                      height=\"251px\"\r\n                      style=\"width: 100%\"\r\n                      v-loading=\"loadingTwo\"  element-loading-text=\"加载中\"\r\n                      element-loading-spinner=\"loading-type-a\"\r\n                      element-loading-background=\"rgba(255, 255, 255, 1)\">\r\n                      <el-table-column\r\n                        prop=\"ranking\"\r\n                        label=\"排名\"\r\n                        align=\"center\"\r\n                        width=\"50\">\r\n                        <template slot-scope=\"scope\">\r\n                          <span class=\"ranking-icon\" :class=\"setRankingCls(scope.row.ranking)\">{{ scope.row.ranking }}</span>\r\n                        </template>\r\n                      </el-table-column>\r\n                      <el-table-column\r\n                        prop=\"name\"\r\n                        label=\"站点名称\">\r\n                      </el-table-column>\r\n                      <el-table-column\r\n                        prop=\"uploadRate\"\r\n                        label=\"上传率\"\r\n                        width=\"100\">\r\n                      </el-table-column>\r\n                    </el-table>\r\n                  </div>\r\n                </div>\r\n                <p class=\"data-upload-analysis\">\r\n                  <span class=\"upload-analysis-text\">经统计分析：</span>\r\n                  <span>{{uploadfiestdiscrib}}</span>&emsp;&emsp;\r\n                </p>\r\n              </div>\r\n            </div>\r\n            <!-- 上传率同比模块 -->\r\n            <div class=\"currency-mode-wrap year-on-year-modular\">\r\n              <h4 class=\"currency-mode-title\">\r\n                <i class=\"mode-title-icon\"></i> 上传率同比\r\n                <span class=\"mode-title-line\"></span>\r\n              </h4>\r\n              <div class=\"secondary-mode-content\" v-loading=\"loadingThree\"  element-loading-text=\"加载中\"\r\n               element-loading-spinner=\"loading-type-a\"\r\n               element-loading-background=\"rgba(255, 255, 255, 1)\">\r\n               \r\n                <div id=\"upload-rate-year\"></div>\r\n              </div>\r\n            </div>\r\n            <!-- 上传率环比模块 -->\r\n            <div class=\"currency-mode-wrap loop-ratio-module-modular\">\r\n              <h4 class=\"currency-mode-title\">\r\n                <i class=\"mode-title-icon\"></i> 上传率环比\r\n                <span class=\"mode-title-line\"></span>\r\n              </h4>\r\n              <div class=\"secondary-mode-content\" v-loading=\"loadingFour\"  element-loading-text=\"加载中\"\r\n               element-loading-spinner=\"loading-type-a\"\r\n               element-loading-background=\"rgba(255, 255, 255, 1)\">\r\n               \r\n                <div id=\"upload-rate-ring-ratio\"></div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </el-scrollbar>\r\n      </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { formatDate } from \"../../assets/js/dateformat.js\";\r\nlet pickerOptions = {\r\n  shortcuts: [\r\n    {\r\n      text: \"最近一周\",\r\n      onClick(picker) {\r\n        const end = new Date();\r\n        const start = new Date();\r\n        start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);\r\n        picker.$emit(\"pick\", [start, end]);\r\n      }\r\n    },\r\n    {\r\n      text: \"最近一个月\",\r\n      onClick(picker) {\r\n        const end = new Date();\r\n        const start = new Date();\r\n        start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);\r\n        picker.$emit(\"pick\", [start, end]);\r\n      }\r\n    },\r\n    {\r\n      text: \"最近三个月\",\r\n      onClick(picker) {\r\n        const end = new Date();\r\n        const start = new Date();\r\n        start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);\r\n        picker.$emit(\"pick\", [start, end]);\r\n      }\r\n    }\r\n  ]\r\n};\r\nlet dataTypeList = [\r\n  {\r\n    name: \"日\",\r\n    type: \"day\"\r\n  },\r\n  {\r\n    name: \"月\",\r\n    type: \"month\"\r\n  },\r\n  {\r\n    name: \"年\",\r\n    type: \"year\"\r\n  },\r\n  {\r\n    name: \"自定义\",\r\n    type: \"custom\"\r\n  }\r\n];\r\nlet tableData = [];\r\nexport default {\r\n  name: \"comparisonAnalysisRates\",\r\n  watch: {},\r\n  data() {\r\n    return {\r\n      loadingOne:true,\r\n      loadingTwo:true,\r\n      loadingThree:true,\r\n      loadingFour:true,\r\n      pickerOptions, //时间快捷菜单\r\n      dataTypeList, //按钮组数据\r\n      dataType: 0, //按钮选中下标\r\n      dataValue: \"\", //时间绑定数据\r\n      custom: false,\r\n      tableData:[],\r\n      rankingHistogram: \"\",\r\n      uploadRateYear: \"\",\r\n      uploadRateRatio: \"\",\r\n      uploadfiestdiscrib: \"--\",\r\n      stationId:\"\",\r\n      openPage:\"\",\r\n      timeType:\"day\"\r\n    };\r\n  },\r\n  methods: {\r\n    // getCheckedNodes(node){\r\n    //   console.log(node);\r\n    // },\r\n    dataTypeToggle(index, item) {\r\n      this.dataType = index;\r\n      if (item.type === \"custom\") {\r\n         this.timeType=\"day\"\r\n        this.custom = false;\r\n      } else {\r\n        this.custom = true;\r\n        this.dataValue = \"\";\r\n      }\r\n      var type = item.type;\r\n      if (type == \"month\") {\r\n        this.timeType=\"month\"\r\n        var date = new Date();\r\n        var datearr = [];\r\n        var d = new Date(date.getFullYear(), date.getMonth() + 1, 0);\r\n        var num = d.getDate();\r\n        datearr.push(\r\n          this.formatStrToDate(formatDate(date, \"yyyy-MM-01 00:00:00\")),\r\n\r\n          this.formatStrToDate(\r\n            formatDate(\r\n              new Date(date.getTime() + 86400 * 1000 * num),\r\n              \"yyyy-MM-01 00:00:00\"\r\n            )\r\n          )\r\n        );\r\n        this.dataValue = datearr;\r\n      } else if (type == \"year\") {\r\n         this.timeType=\"year\"\r\n        var date = new Date();\r\n        var datearr = [];\r\n        datearr.push(\r\n          this.formatStrToDate(formatDate(date, \"yyyy-01-01 00:00:00\")),\r\n          this.formatStrToDate(\r\n            formatDate(\r\n              new Date(date.getTime() + 86400 * 1000 * 365),\r\n              \"yyyy-01-01 00:00:00\"\r\n            )\r\n          )\r\n        );\r\n        this.dataValue = datearr;\r\n      } else if (type == \"day\") {\r\n          this.timeType=\"day\"\r\n        var date = new Date();\r\n        var datearr = [];\r\n        datearr.push(\r\n          this.formatStrToDate(formatDate(date, \"yyyy-MM-dd 00:00:00\")),\r\n          this.formatStrToDate(\r\n            formatDate(\r\n              new Date(date.getTime() + 86400 * 1000),\r\n              \"yyyy-MM-dd 00:00:00\"\r\n            )\r\n          )\r\n        );\r\n        this.dataValue = datearr;\r\n      }\r\n    },\r\n    formatStrToDate(dateString) {\r\n      if (dateString) {\r\n        var arr1 = dateString.split(\" \");\r\n        var sdate = arr1[0].split(\"-\");\r\n        var date = new Date(sdate[0], sdate[1] - 1, sdate[2]);\r\n        return date;\r\n      }\r\n    },\r\n    initTime() {\r\n      var date = new Date();\r\n      var datearr = [];\r\n      datearr.push(\r\n        this.formatStrToDate(formatDate(date, \"yyyy-MM-dd 00:00:00\")),\r\n        this.formatStrToDate(\r\n          formatDate(\r\n            new Date(date.getTime() + 86400 * 1000),\r\n            \"yyyy-MM-dd 00:00:00\"\r\n          )\r\n        )\r\n      );\r\n      this.dataValue = datearr;\r\n    },\r\n    setRankingCls(rank) {\r\n      let ranking = parseInt(rank);\r\n      let cls = \"\";\r\n      switch (ranking) {\r\n        case 1:\r\n          cls = \"first-ranking\";\r\n          break;\r\n        case 2:\r\n          cls = \"second-ranking\";\r\n          break;\r\n        case 3:\r\n          cls = \"third-ranking\";\r\n          break;\r\n      }\r\n      return cls;\r\n    },\r\n    searchData() {\r\n      this.rateRankLoading = true;\r\n      this.rateRankNoDataState = false;\r\n      this.uploadRateLoading = true;\r\n      this.uploadRateNoDataState = false;\r\n      this.rateYearLoading = true;\r\n      this.rateYearNoDataState = false;\r\n      this.ringRatioLoading = true;\r\n      this.ringRatioNoDataState = false;\r\n\r\n      this.waterQualityGradeChart();\r\n      this.searchRanking();\r\n      this.uploadRateYearChart();\r\n      this.uploadRateRingRatio();\r\n    },\r\n    //查询上传率排名\r\n    searchRanking() {\r\n      this.loadingTwo=true;\r\n      let startTime = formatDate(this.dataValue[0], \"yyyy-MM-dd hh:mm:ss\");\r\n      let endTime = formatDate(this.dataValue[1], \"yyyy-MM-dd hh:mm:ss\");\r\n      let params={};\r\n      params.timeType=this.timeType;\r\n      params.startTime=startTime;\r\n      params.endTime=endTime;\r\n      params.queryCode=this.stationId;\r\n      params.queryType=this.openPage;\r\n      this.$http\r\n        .get(\"/StatisticsAndAlarm/twoRateComparison/uploadRateReports\", {\r\n          params:params\r\n        })\r\n        .then(response => {\r\n          this.loadingTwo=false;\r\n          let dataJson = response.data;\r\n          if (dataJson.code === 0) {\r\n            var list = dataJson.content.dataList;\r\n            var arr = [];\r\n            for (var i = 0; i < list.length; i++) {\r\n              arr.push({\r\n                ranking: i + 1 + \"\",\r\n                name: list[i].name,\r\n                uploadRate: list[i].rate + \"%\"\r\n              });\r\n            }\r\n            this.uploadfiestdiscrib=dataJson.content.info.message;            \r\n            this.tableData = arr;\r\n          }\r\n         \r\n        })\r\n        .catch(error => {\r\n        \r\n        });\r\n    },\r\n    //上传率柱状图\r\n    waterQualityGradeChart() {\r\n      this.loadingOne=true;\r\n      let startTime = formatDate(this.dataValue[0], \"yyyy-MM-dd hh:mm:ss\");\r\n      let endTime = formatDate(this.dataValue[1], \"yyyy-MM-dd hh:mm:ss\");\r\n      let params={};\r\n      params.timeType=this.timeType;\r\n      params.startTime=startTime;\r\n      params.endTime=endTime;\r\n      params.queryCode=this.stationId;\r\n      params.queryType=this.openPage;\r\n\r\n      this.$http\r\n        .get(\"/StatisticsAndAlarm/twoRateComparison/uploadRateBars\", {\r\n          params:params\r\n        })\r\n        .then(response => {\r\n          this.loadingOne=false;\r\n          let dataJson = response.data;\r\n          if (dataJson.code === 0) {\r\n            var info = dataJson.content.info;\r\n            this.rankingHistogram = this.$echarts.init(\r\n              document.getElementById(\"upload-rate-ranking\")\r\n            );\r\n            let option = {\r\n              title: {\r\n                text: \"上传率排名柱状图\",\r\n                textStyle: {\r\n                  fontSize: 16\r\n                },\r\n                x: \"center\",\r\n                y: 10\r\n              },\r\n              tooltip: {\r\n                trigger: \"axis\",\r\n                axisPointer: {\r\n                  // 坐标轴指示器，坐标轴触发有效\r\n                  type: \"shadow\" // 默认为直线，可选为：'line' | 'shadow'\r\n                }\r\n              },\r\n              grid: {\r\n                top: 56,\r\n                left: 20,\r\n                right: \"4%\",\r\n                bottom: \"3%\",\r\n                containLabel: true\r\n              },\r\n              xAxis: [\r\n                {\r\n                  type: \"category\",\r\n                  data: info.xAxis,\r\n                  axisTick: {\r\n                    show: false\r\n                  },\r\n                  axisLine: {\r\n                    lineStyle: {\r\n                      color: \"#c6d1de\"\r\n                    }\r\n                  },\r\n                  axisLabel: {\r\n                    color: \"#999\"\r\n                  },\r\n                  splitLine: {\r\n                    show: true\r\n                  }\r\n                }\r\n              ],\r\n              yAxis: [\r\n                {\r\n                  type: \"value\",\r\n                  splitNumber: 5,\r\n                  max: 100,\r\n                  axisTick: {\r\n                    show: false\r\n                  },\r\n                  axisLine: {\r\n                    lineStyle: {\r\n                      color: \"#c6d1de\"\r\n                    }\r\n                  },\r\n                  axisLabel: {\r\n                    color: \"#999\"\r\n                  },\r\n                  splitLine: {\r\n                    show: true\r\n                  }\r\n                }\r\n              ],\r\n              series: [\r\n                {\r\n                  name: \"上传率\",\r\n                  type: \"bar\",\r\n                  data: info.series[0].data,\r\n                  barWidth: 20,\r\n                  label: {\r\n                    show: true,\r\n                    position: \"top\",\r\n                    formatter: \"{c}%\"\r\n                  },\r\n                  itemStyle: {\r\n                    color: function(param) {\r\n                      if (param.dataIndex < 3) {\r\n                        return \"#24c768\";\r\n                      } else {\r\n                        return \"#00a1e4\";\r\n                      }\r\n                    }\r\n                  }\r\n                }\r\n              ]\r\n            };\r\n            this.rankingHistogram.setOption(option);\r\n          }\r\n          this.rateRankLoading = false;\r\n        })\r\n        .catch(error => {\r\n         \r\n        });\r\n    },\r\n\r\n    //同比对比\r\n    uploadRateYearChart() {\r\n      this.loadingThree=true;\r\n      let startTime = formatDate(this.dataValue[0], \"yyyy-MM-dd hh:mm:ss\");\r\n      let endTime = formatDate(this.dataValue[1], \"yyyy-MM-dd hh:mm:ss\");\r\n      let params={};\r\n      params.timeType=this.timeType;\r\n      params.startTime=startTime;\r\n      params.endTime=endTime;\r\n      params.queryCode=this.stationId;\r\n      params.queryType=this.openPage;\r\n      params.compareType=\"H\";\r\n      this.$http\r\n        .get(\"/StatisticsAndAlarm/twoRateComparison/uploadRateYoY\", {\r\n          params:params\r\n        })\r\n        .then(response => {\r\n          this.loadingThree=false;\r\n          let dataJson = response.data;\r\n          if (dataJson.code === 0) {\r\n            var info = dataJson.content.info;\r\n           \r\n            this.uploadRateYear = this.$echarts.init(\r\n              document.getElementById(\"upload-rate-year\")\r\n            );\r\n            let option = {\r\n              color: [\"#00a1e4\", \"#e5ce10\", \"#ff0000\"],\r\n              tooltip: {\r\n                trigger: \"axis\",\r\n                axisPointer: {\r\n                  // 坐标轴指示器，坐标轴触发有效\r\n                  type: \"shadow\" // 默认为直线，可选为：'line' | 'shadow'\r\n                }\r\n              },\r\n              legend: {\r\n                data: [\r\n                  { name: info.series[0].name, icon: \"rect\" },\r\n                  { name: info.series[1].name, icon: \"rect\" },\r\n                  \"同比增长率\"\r\n                ],\r\n                bottom: 10\r\n              },\r\n              grid: {\r\n                top: 26,\r\n                left: 20,\r\n                right: \"4%\",\r\n                bottom: 40,\r\n                containLabel: true\r\n              },\r\n              xAxis: [\r\n                {\r\n                  type: \"category\",\r\n                  data: info.xAxis,\r\n                  axisTick: {\r\n                    show: false\r\n                  },\r\n                  axisLine: {\r\n                    lineStyle: {\r\n                      color: \"#c6d1de\"\r\n                    }\r\n                  },\r\n                  axisLabel: {\r\n                    color: \"#999\"\r\n                  },\r\n                  splitLine: {\r\n                    show: true\r\n                  }\r\n                }\r\n              ],\r\n              yAxis: [\r\n                {\r\n                  type: \"value\",\r\n                  splitNumber: 5,\r\n                  axisTick: {\r\n                    show: false\r\n                  },\r\n                  axisLine: {\r\n                    lineStyle: {\r\n                      color: \"#c6d1de\"\r\n                    }\r\n                  },\r\n                  axisLabel: {\r\n                    color: \"#999\"\r\n                  },\r\n                  splitLine: {\r\n                    show: true\r\n                  }\r\n                },\r\n                {\r\n                  type: \"value\",\r\n                  splitNumber: 5,\r\n                  axisTick: {\r\n                    show: false\r\n                  },\r\n                  axisLine: {\r\n                    lineStyle: {\r\n                      color: \"#c6d1de\"\r\n                    }\r\n                  },\r\n                  axisLabel: {\r\n                    show: false,\r\n                    color: \"#999\"\r\n                  },\r\n                  splitLine: {\r\n                    show: true\r\n                  }\r\n                }\r\n              ],\r\n              series: [\r\n                {\r\n                  name: info.series[0].name,\r\n                  type: \"bar\",\r\n                  data: info.series[0].data,\r\n                  barWidth: 20\r\n                },\r\n                {\r\n                  name: info.series[1].name,\r\n                  type: \"bar\",\r\n                  data: info.series[1].data,\r\n                  barWidth: 20\r\n                },\r\n                {\r\n                  name: \"同比增长率\",\r\n                  type: \"line\",\r\n                  yAxisIndex: 1,\r\n                  symbolSize: 10,\r\n                  data: info.series[2].data,\r\n                  label: {\r\n                    show: true,\r\n                    formatter: \"{c}%\"\r\n                  }\r\n                }\r\n              ]\r\n            };\r\n            this.uploadRateYear.setOption(option);\r\n          }\r\n         \r\n        })\r\n        .catch(error => {\r\n         \r\n        });\r\n    },\r\n    //环比对比\r\n    uploadRateRingRatio() {\r\n      this.loadingFour=true;\r\n      let startTime = formatDate(this.dataValue[0], \"yyyy-MM-dd hh:mm:ss\");\r\n      let endTime = formatDate(this.dataValue[1], \"yyyy-MM-dd hh:mm:ss\");\r\n      let params={};\r\n      params.timeType=this.timeType;\r\n      params.startTime=startTime;\r\n      params.endTime=endTime;\r\n      params.queryCode=this.stationId;\r\n      params.queryType=this.openPage;\r\n      params.compareType=\"\";\r\n      this.$http\r\n        .get(\"/StatisticsAndAlarm/twoRateComparison/uploadRateYoY\", {\r\n          params:params\r\n        })\r\n        .then(response => {\r\n           this.loadingFour=false;\r\n          let dataJson = response.data;\r\n          if (dataJson.code === 0) {\r\n            var info = dataJson.content.info;\r\n            this.uploadRateRatio = this.$echarts.init(\r\n              document.getElementById(\"upload-rate-ring-ratio\")\r\n            );\r\n            let option = {\r\n              color: [\"#00a1e4\", \"#e5ce10\", \"#ff0000\"],\r\n              tooltip: {\r\n                trigger: \"axis\",\r\n                axisPointer: {\r\n                  // 坐标轴指示器，坐标轴触发有效\r\n                  type: \"shadow\" // 默认为直线，可选为：'line' | 'shadow'\r\n                }\r\n              },\r\n              legend: {\r\n                data: [\r\n                  { name: info.series[0].name, icon: \"rect\" },\r\n                  { name: info.series[1].name, icon: \"rect\" },\r\n                  \"环比增长率\"\r\n                ],\r\n                bottom: 10\r\n              },\r\n              grid: {\r\n                top: 26,\r\n                left: 20,\r\n                right: \"4%\",\r\n                bottom: 40,\r\n                containLabel: true\r\n              },\r\n              xAxis: [\r\n                {\r\n                  type: \"category\",\r\n                  data: info.xAxis,\r\n                  axisTick: {\r\n                    show: false\r\n                  },\r\n                  axisLine: {\r\n                    lineStyle: {\r\n                      color: \"#c6d1de\"\r\n                    }\r\n                  },\r\n                  axisLabel: {\r\n                    color: \"#999\"\r\n                  },\r\n                  splitLine: {\r\n                    show: true\r\n                  }\r\n                }\r\n              ],\r\n              yAxis: [\r\n                {\r\n                  type: \"value\",\r\n                  splitNumber: 5,\r\n                  axisTick: {\r\n                    show: false\r\n                  },\r\n                  axisLine: {\r\n                    lineStyle: {\r\n                      color: \"#c6d1de\"\r\n                    }\r\n                  },\r\n                  axisLabel: {\r\n                    color: \"#999\"\r\n                  },\r\n                  splitLine: {\r\n                    show: true\r\n                  }\r\n                },\r\n                {\r\n                  type: \"value\",\r\n                  splitNumber: 5,\r\n                  axisTick: {\r\n                    show: false\r\n                  },\r\n                  axisLine: {\r\n                    lineStyle: {\r\n                      color: \"#c6d1de\"\r\n                    }\r\n                  },\r\n                  axisLabel: {\r\n                    show: false,\r\n                    color: \"#999\"\r\n                  },\r\n                  splitLine: {\r\n                    show: true\r\n                  }\r\n                }\r\n              ],\r\n              series: [\r\n                {\r\n                  name: info.series[0].name,\r\n                  type: \"bar\",\r\n                  data: info.series[0].data,\r\n                  barWidth: 20\r\n                },\r\n                {\r\n                  name: info.series[1].name,\r\n                  type: \"bar\",\r\n                  data: info.series[1].data,\r\n                  barWidth: 20\r\n                },\r\n                {\r\n                  name: \"环比增长率\",\r\n                  type: \"line\",\r\n                  yAxisIndex: 1,\r\n                  symbolSize: 10,\r\n                  data: info.series[2].data,\r\n                  label: {\r\n                    show: true,\r\n                    formatter: \"{c}%\"\r\n                  }\r\n                }\r\n              ]\r\n            };\r\n            this.uploadRateRatio.setOption(option);\r\n          }\r\n         \r\n        })\r\n        .catch(error => {\r\n         \r\n        });\r\n    },\r\n    //查询页面数据\r\n    searchData(){\r\n      this.waterQualityGradeChart();\r\n      this.searchRanking();\r\n      this.uploadRateYearChart();\r\n      this.uploadRateRingRatio();  \r\n    }\r\n  },\r\n  mounted() {\r\n   \r\n   \r\n\r\n  },\r\n  created() {\r\n     this.initTime();\r\n  },\r\n  watch: {\r\n    stationInfo(value) {\r\n      if (value.length > 0) {\r\n        this.stationId = value[0].nodeId;\r\n        this.openPage = value[0].nodeType;\r\n        this.searchData()\r\n       \r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    stationInfo: {\r\n      get: function() {\r\n        return this.$store.state.strictlyinfo;\r\n      }\r\n    },\r\n    \r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.comparison-analysis-rates-page {\r\n  height: 100%;\r\n  .page-content-scroll {\r\n    height: 100%;\r\n  }\r\n  .icon-chaxun {\r\n    font-size: 14px;\r\n  }\r\n  .year-on-year-modular {\r\n    width: calc(50% - 4px);\r\n    float: left;\r\n  }\r\n  .loop-ratio-module-modular {\r\n    width: calc(50% - 4px);\r\n    float: right;\r\n  }\r\n  .data-upload-rate-chart {\r\n    height: 310px;\r\n    width: 65%;\r\n    float: left;\r\n    position: relative;\r\n  }\r\n  .data-upload-rate-table {\r\n    height: 310px;\r\n    width: 35%;\r\n    float: right;\r\n  }\r\n  .data-upload-analysis {\r\n    float: left;\r\n    width: 100%;\r\n  }\r\n  #upload-rate-ranking {\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n  .upload-rate-table-wrap {\r\n    margin: 0 20px 0 0;\r\n    height: calc(100% - 56px);\r\n  }\r\n  .contrast-title {\r\n    text-align: center;\r\n    line-height: 56px;\r\n    font-size: 16px;\r\n  }\r\n  .ranking-icon {\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n    margin-bottom: 3px;\r\n    width: 18px;\r\n    height: 14px;\r\n    line-height: 14px;\r\n    background: #cadaeb;\r\n    font-size: 12px;\r\n  }\r\n  .ranking-icon.first-ranking {\r\n    width: 18px;\r\n    height: 22px;\r\n    line-height: 18px;\r\n    background: url(\"../../assets/images/ranking_first_bg.png\") no-repeat center\r\n      center;\r\n    color: #fff;\r\n  }\r\n  .ranking-icon.second-ranking {\r\n    width: 18px;\r\n    height: 22px;\r\n    line-height: 18px;\r\n    background: url(\"../../assets/images/ranking_Second_bg.png\") no-repeat\r\n      center center;\r\n    color: #fff;\r\n  }\r\n  .ranking-icon.third-ranking {\r\n    width: 18px;\r\n    height: 22px;\r\n    line-height: 18px;\r\n    background: url(\"../../assets/images/ranking_Third_bg.png\") no-repeat center\r\n      center;\r\n    color: #fff;\r\n  }\r\n  #upload-rate-year,\r\n  #upload-rate-ring-ratio {\r\n    height: 288px;\r\n    width: 100%;\r\n    margin-bottom: 8px;\r\n  }\r\n  .data-upload-analysis {\r\n    height: 56px;\r\n    line-height: 56px;\r\n    padding-left: 20px;\r\n    .upload-analysis-text {\r\n      color: #999;\r\n    }\r\n  }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/views/colligateApplication/comparisonAnalysisRates.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"comparison-analysis-rates-page\"},[_c('div',{staticClass:\"secondary-page-content\"},[_c('el-scrollbar',{staticClass:\"page-content-scroll\"},[_c('div',{staticClass:\"secondary-scroll-content clear\"},[_c('div',{staticClass:\"secondary-toolbar\"},[_c('span',[_vm._v(\"时间段：\")]),_vm._v(\" \"),_c('el-button-group',_vm._l((_vm.dataTypeList),function(item,index){return _c('el-button',{key:index,class:{active:_vm.dataType === index},attrs:{\"size\":\"small\",\"type\":\"primary\",\"plain\":\"\"},on:{\"click\":function($event){return _vm.dataTypeToggle(index,item)}}},[_vm._v(_vm._s(item.name))])}),1),_vm._v(\" \"),_c('div',{staticClass:\"layoutBox\",staticStyle:{\"width\":\"242px\"}},[_c('el-date-picker',{attrs:{\"type\":\"daterange\",\"align\":\"left\",\"unlink-panels\":\"\",\"range-separator\":\"~\",\"start-placeholder\":\"开始日期\",\"end-placeholder\":\"结束日期\",\"clearable\":false,\"format\":\"yyyy-MM-dd\",\"prefix-icon\":\"el-icon-date\",\"disabled\":_vm.custom,\"picker-options\":_vm.pickerOptions},model:{value:(_vm.dataValue),callback:function ($$v) {_vm.dataValue=$$v},expression:\"dataValue\"}})],1),_vm._v(\" \\n          \"),_c('el-button',{on:{\"click\":_vm.searchData}},[_c('i',{staticClass:\"iconfont icon-sousuo\"}),_vm._v(\"查询\")])],1),_vm._v(\" \"),_c('div',{staticClass:\"currency-mode-wrap\"},[_c('h4',{staticClass:\"currency-mode-title\"},[_c('i',{staticClass:\"mode-title-icon\"}),_vm._v(\" 数据上传率\\n            \"),_c('span',{staticClass:\"mode-title-line\"})]),_vm._v(\" \"),_c('div',{staticClass:\"secondary-mode-content clear\"},[_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loadingOne),expression:\"loadingOne\"}],staticClass:\"data-upload-rate-chart\",attrs:{\"element-loading-text\":\"加载中\",\"element-loading-spinner\":\"loading-type-a\",\"element-loading-background\":\"rgba(255, 255, 255, 1)\"}},[_c('div',{attrs:{\"id\":\"upload-rate-ranking\"}})]),_vm._v(\" \"),_c('div',{staticClass:\"data-upload-rate-table\"},[_c('h4',{staticClass:\"contrast-title\"},[_vm._v(\"上传率排名列表\")]),_vm._v(\" \"),_c('div',{staticClass:\"upload-rate-table-wrap\"},[_c('el-table',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loadingTwo),expression:\"loadingTwo\"}],staticStyle:{\"width\":\"100%\"},attrs:{\"data\":_vm.tableData,\"border\":\"\",\"height\":\"251px\",\"element-loading-text\":\"加载中\",\"element-loading-spinner\":\"loading-type-a\",\"element-loading-background\":\"rgba(255, 255, 255, 1)\"}},[_c('el-table-column',{attrs:{\"prop\":\"ranking\",\"label\":\"排名\",\"align\":\"center\",\"width\":\"50\"},scopedSlots:_vm._u([{key:\"default\",fn:function(scope){return [_c('span',{staticClass:\"ranking-icon\",class:_vm.setRankingCls(scope.row.ranking)},[_vm._v(_vm._s(scope.row.ranking))])]}}])}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"name\",\"label\":\"站点名称\"}}),_vm._v(\" \"),_c('el-table-column',{attrs:{\"prop\":\"uploadRate\",\"label\":\"上传率\",\"width\":\"100\"}})],1)],1)]),_vm._v(\" \"),_c('p',{staticClass:\"data-upload-analysis\"},[_c('span',{staticClass:\"upload-analysis-text\"},[_vm._v(\"经统计分析：\")]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.uploadfiestdiscrib))]),_vm._v(\"  \\n            \")])])]),_vm._v(\" \"),_c('div',{staticClass:\"currency-mode-wrap year-on-year-modular\"},[_c('h4',{staticClass:\"currency-mode-title\"},[_c('i',{staticClass:\"mode-title-icon\"}),_vm._v(\" 上传率同比\\n            \"),_c('span',{staticClass:\"mode-title-line\"})]),_vm._v(\" \"),_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loadingThree),expression:\"loadingThree\"}],staticClass:\"secondary-mode-content\",attrs:{\"element-loading-text\":\"加载中\",\"element-loading-spinner\":\"loading-type-a\",\"element-loading-background\":\"rgba(255, 255, 255, 1)\"}},[_c('div',{attrs:{\"id\":\"upload-rate-year\"}})])]),_vm._v(\" \"),_c('div',{staticClass:\"currency-mode-wrap loop-ratio-module-modular\"},[_c('h4',{staticClass:\"currency-mode-title\"},[_c('i',{staticClass:\"mode-title-icon\"}),_vm._v(\" 上传率环比\\n            \"),_c('span',{staticClass:\"mode-title-line\"})]),_vm._v(\" \"),_c('div',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.loadingFour),expression:\"loadingFour\"}],staticClass:\"secondary-mode-content\",attrs:{\"element-loading-text\":\"加载中\",\"element-loading-spinner\":\"loading-type-a\",\"element-loading-background\":\"rgba(255, 255, 255, 1)\"}},[_c('div',{attrs:{\"id\":\"upload-rate-ring-ratio\"}})])])])])],1)])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-913a6bc2\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/views/colligateApplication/comparisonAnalysisRates.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-913a6bc2\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./comparisonAnalysisRates.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./comparisonAnalysisRates.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./comparisonAnalysisRates.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-913a6bc2\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./comparisonAnalysisRates.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-913a6bc2\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/views/colligateApplication/comparisonAnalysisRates.vue\n// module id = null\n// module chunks = "],"sourceRoot":""}